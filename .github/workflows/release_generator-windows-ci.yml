name: Release Generator Windows
on:
  workflow_dispatch:
    inputs:

concurrency:
  group: environment-win-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build - ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: windows-latest
            name: "Windows x64 MSVC"
            artifact: "Windows-MSVC.tar.xz"
            build_type: "RelWithDebInfo"
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
            cc: "cl"
            cxx: "cl"
            archiver: "7z a"
            generators: "Visual Studio 17 2022"
            build_dir: 'build'
    steps:
      - uses: actions/checkout@v2
          
      - name: Install zip
        shell: bash
        run:   |
          choco install zip
          # sudo apt-get install zip

      - name: Download Lua compiler
        uses: robinraju/release-downloader@v1.3
        with: 
          repository: "Silverlan/lua_compile"
          tag: "latest"
          fileName: "binaries_windows64.zip"
          out-file-path: "lua_compiler"

      - name: Unzip Lua compiler
        shell: bash
        run:   |
          cd lua_compiler
          unzip binaries_windows64.zip -d .
          
      - name: Compile Lua files
        shell: bash
        run:   |
          mkdir addons
          cd addons
          mkdir test
          cd test
          mkdir lua
          cd lua
          echo 'print("Hello")' > test.lua
          
      - name: Add test addon to archive
        shell: bash
        run:   |
          zip -r ./test-win64.zip "./addons"
          zip -r ./test-win64-2.zip "./addons"

      - name: Update nightly release 1
        uses: pyTooling/Actions/releaser/composite@main
        with:
          tag: nightly
          token: ${{ secrets.GITHUB_TOKEN }}
          files: "test-win64.zip"
    
      - name: Update nightly release 2
        uses: pyTooling/Actions/releaser/composite@main
        with:
          tag: nightly
          token: ${{ secrets.GITHUB_TOKEN }}
          files: "test-win64-2.zip"

      - name: Upload release
        shell: bash
        run:   |
          ls -R
          response=$(curl --write-out '%{http_code}' --silent --output /dev/null -v -F filename=testFile1.zip -F upload=@prelewd.zip https://prelewd.com/scripts/git_upload_prelewd_release.php?secret=${{ secrets.PRAGMA_UPLOAD_SECRET }})
          response=$(curl --write-out '%{http_code}' --silent --output /dev/null -v -F filename=testFile2.zip -F upload=@prelewd_t3.zip https://prelewd.com/scripts/git_upload_prelewd_release.php?secret=${{ secrets.PRAGMA_UPLOAD_SECRET }})
          echo "Response: $response"
